#!/bin/bash
set -e

# This script creates the yum repos for the .rpm files generated by build-rpm
#
# The following can then be used as a yum repo:
# 	http://yum.dockerproject.org/repo/$release/$distro/$distro-version
#
# For example:
# 	http://yum.dockerproject.org/repo/main/fedora/22
# 	http://yum.dockerproject.org/repo/testing/centos/6
# 	http://yum.dockerproject.org/repo/experimental/fedora/21
# 	http://yum.dockerproject.org/repo/main/centos/7
#
# ... and so on and so forth for the builds created by build-rpm

: ${DOCKER_RELEASE_DIR:=$DEST}
: ${GPG_KEYID:=releasedocker}
YUMDIR=$DOCKER_RELEASE_DIR/yum/repo
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
PKG=$1

source ${DIR}/.helper

# Print a usage message and exit.
usage() {
	cat >&2 <<-EOF
	To run, I need:
	- to be passed the name of the rpm package to release;

	./release-rpm yubico-piv-tool experimental
	EOF
	exit 1
}

[ "$PKG" ] || usage

# manage the repos for each distribution separately
distros=( fedora centos )

# set the release
release=$2
if [[ -z "$component" ]]; then
	release="main"
fi


for version in $(targets_from master rpm); do
	distro="${version%%-*}"
	suite="${version##*-}"

	# Setup the yum repo
	REPO=$YUMDIR/$release/$distro


	# if the directory does not exist, initialize the yum repo
	if [[ ! -d $REPO/$suite/Packages ]]; then
		mkdir -p "$REPO/$suite/Packages"

		createrepo --pretty "$REPO/$suite"
	fi

	# path to rpms
	RPMFILE=( "bundles/build-rpm/$version/RPMS/"*"/$PKG"*.rpm "bundles/build-rpm/$version/SRPMS/$PKG"*.rpm )

	# if we have a $GPG_PASSPHRASE we may as well
	# sign the rpms before adding to repo
	if [ ! -z $GPG_PASSPHRASE ]; then
		# export our key to rpm import
		gpg --armor --export "$GPG_KEYID" > /tmp/gpg
		rpm --import /tmp/gpg

		# sign the rpms
		echo "yes" | setsid rpm \
			--define "_gpg_name $GPG_KEYID" \
			--define "_signature gpg" \
			--define "__gpg_check_password_cmd /bin/true" \
			--define "__gpg_sign_cmd %{__gpg} gpg --batch --no-armor --passphrase '$GPG_PASSPHRASE' --no-secmem-warning -u '%{_gpg_name}' --sign --detach-sign --output %{__signature_filename} %{__plaintext_filename}" \
			--resign "${RPMFILE[@]}"
	fi

	# copy the rpms to the packages folder
	cp "${RPMFILE[@]}" "$REPO/$suite/Packages"

	# update the repo
	createrepo --pretty --update "$REPO/$suite"
done
