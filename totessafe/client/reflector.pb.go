// Code generated by protoc-gen-go. DO NOT EDIT.
// source: reflector.proto

/*
Package reflector is a generated protocol buffer package.

It is generated from these files:
	reflector.proto

It has these top-level messages:
	PawsBlob
	ReturnType
	RequestType
*/
package client

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PawsBlob struct {
	Data string `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
}

func (m *PawsBlob) Reset()                    { *m = PawsBlob{} }
func (m *PawsBlob) String() string            { return proto.CompactTextString(m) }
func (*PawsBlob) ProtoMessage()               {}
func (*PawsBlob) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *PawsBlob) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type ReturnType struct {
}

func (m *ReturnType) Reset()                    { *m = ReturnType{} }
func (m *ReturnType) String() string            { return proto.CompactTextString(m) }
func (*ReturnType) ProtoMessage()               {}
func (*ReturnType) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type RequestType struct {
}

func (m *RequestType) Reset()                    { *m = RequestType{} }
func (m *RequestType) String() string            { return proto.CompactTextString(m) }
func (*RequestType) ProtoMessage()               {}
func (*RequestType) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func init() {
	proto.RegisterType((*PawsBlob)(nil), "Paws.PawsBlob")
	proto.RegisterType((*ReturnType)(nil), "Paws.ReturnType")
	proto.RegisterType((*RequestType)(nil), "Paws.RequestType")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ReflectorInternal service

type ReflectorInternalClient interface {
	Set(ctx context.Context, in *PawsBlob, opts ...grpc.CallOption) (*ReturnType, error)
}

type reflectorInternalClient struct {
	cc *grpc.ClientConn
}

func NewReflectorInternalClient(cc *grpc.ClientConn) ReflectorInternalClient {
	return &reflectorInternalClient{cc}
}

func (c *reflectorInternalClient) Set(ctx context.Context, in *PawsBlob, opts ...grpc.CallOption) (*ReturnType, error) {
	out := new(ReturnType)
	err := grpc.Invoke(ctx, "/Paws.ReflectorInternal/Set", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ReflectorInternal service

type ReflectorInternalServer interface {
	Set(context.Context, *PawsBlob) (*ReturnType, error)
}

func RegisterReflectorInternalServer(s *grpc.Server, srv ReflectorInternalServer) {
	s.RegisterService(&_ReflectorInternal_serviceDesc, srv)
}

func _ReflectorInternal_Set_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PawsBlob)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReflectorInternalServer).Set(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Paws.ReflectorInternal/Set",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReflectorInternalServer).Set(ctx, req.(*PawsBlob))
	}
	return interceptor(ctx, in, info, handler)
}

var _ReflectorInternal_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Paws.ReflectorInternal",
	HandlerType: (*ReflectorInternalServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Set",
			Handler:    _ReflectorInternal_Set_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "reflector.proto",
}

// Client API for ReflectorExternal service

type ReflectorExternalClient interface {
	Get(ctx context.Context, in *RequestType, opts ...grpc.CallOption) (*PawsBlob, error)
}

type reflectorExternalClient struct {
	cc *grpc.ClientConn
}

func NewReflectorExternalClient(cc *grpc.ClientConn) ReflectorExternalClient {
	return &reflectorExternalClient{cc}
}

func (c *reflectorExternalClient) Get(ctx context.Context, in *RequestType, opts ...grpc.CallOption) (*PawsBlob, error) {
	out := new(PawsBlob)
	err := grpc.Invoke(ctx, "/Paws.ReflectorExternal/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ReflectorExternal service

type ReflectorExternalServer interface {
	Get(context.Context, *RequestType) (*PawsBlob, error)
}

func RegisterReflectorExternalServer(s *grpc.Server, srv ReflectorExternalServer) {
	s.RegisterService(&_ReflectorExternal_serviceDesc, srv)
}

func _ReflectorExternal_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestType)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReflectorExternalServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Paws.ReflectorExternal/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReflectorExternalServer).Get(ctx, req.(*RequestType))
	}
	return interceptor(ctx, in, info, handler)
}

var _ReflectorExternal_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Paws.ReflectorExternal",
	HandlerType: (*ReflectorExternalServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _ReflectorExternal_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "reflector.proto",
}

func init() { proto.RegisterFile("reflector.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 187 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2f, 0x4a, 0x4d, 0xcb,
	0x49, 0x4d, 0x2e, 0xc9, 0x2f, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x09, 0x48, 0x2c,
	0x2f, 0x56, 0x92, 0xe3, 0xe2, 0x00, 0xd1, 0x4e, 0x39, 0xf9, 0x49, 0x42, 0x42, 0x5c, 0x2c, 0x29,
	0x89, 0x25, 0x89, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x60, 0xb6, 0x12, 0x0f, 0x17, 0x57,
	0x50, 0x6a, 0x49, 0x69, 0x51, 0x5e, 0x48, 0x65, 0x41, 0xaa, 0x12, 0x2f, 0x17, 0x77, 0x50, 0x6a,
	0x61, 0x69, 0x6a, 0x71, 0x09, 0x88, 0x6b, 0x64, 0xc3, 0x25, 0x18, 0x04, 0x33, 0xd5, 0x33, 0xaf,
	0x24, 0xb5, 0x28, 0x2f, 0x31, 0x47, 0x48, 0x9d, 0x8b, 0x39, 0x38, 0xb5, 0x44, 0x88, 0x4f, 0x0f,
	0x64, 0xae, 0x1e, 0xcc, 0x70, 0x29, 0x01, 0x08, 0x1f, 0x61, 0x98, 0x91, 0x2d, 0x92, 0x6e, 0xd7,
	0x0a, 0xa8, 0x6e, 0x0d, 0x2e, 0x66, 0xf7, 0xd4, 0x12, 0x21, 0x41, 0x98, 0x6a, 0xb8, 0x65, 0x52,
	0x68, 0x06, 0x3a, 0x49, 0x72, 0xf1, 0x66, 0xa5, 0x16, 0x17, 0xa7, 0x15, 0x25, 0x56, 0xe9, 0x15,
	0x80, 0x04, 0xc1, 0x1e, 0xf2, 0x60, 0x0c, 0x60, 0x4c, 0x62, 0x03, 0xfb, 0xd0, 0x18, 0x10, 0x00,
	0x00, 0xff, 0xff, 0xc7, 0x3c, 0x7b, 0x15, 0xf4, 0x00, 0x00, 0x00,
}
